<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" default="$(find r2_gazebo)/worlds/r2_ISS.world"/>
  
  <!-- set use_sim_time flag -->
  <group if="$(arg use_sim_time)">
    <param name="/use_sim_time" value="true" />
  </group>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg headless)" name="command_arg2" value=""/>
  <arg     if="$(arg headless)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  <arg name="hx" default="-2.916481"/>
  <arg name="hy" default="0.164800"/>
  <arg name="hz" default="0"/>
  <arg name="hroll" default="0"/>
  <arg name="hpitch" default="0"/>
  <arg name="hyaw" default="1.599874"/>

  <!-- start gazebo server-->
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="false" output="screen"
  args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) $(arg world_name)" />
  
  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
  </group>
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find smite_gazebo)/urdf/smite.urdf -urdf -model smite -z 0.2"/>

  <node name="spawn_sdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find smite_gazebo)//home/wassim/catkin_ws/src/smite_gazebo/urdf/drc_practice_orange_jersey_barrier/model.sdf -sdf -model hot_walll -x $(arg hx) -y $(arg hy) -z $(arg hz)
              -R $(arg hroll) -P $(arg hpitch) -Y $(arg hyaw)"/>
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0 0 0.1397 0 0 0 base_link hokuyo_link 100" />
</launch>